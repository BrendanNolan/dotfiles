after-startup-command = [
    # JankyBorders has a built-in detection of already running process,
    # so it won't be run twice on AeroSpace restart
    'exec-and-forget borders active_color=0xffe1e3e4 inactive_color=0xff494d64 width=5.0',
    # 'exec-and-forget pgrep -x zathura || zathura', no need to open this upfront if there is nothing to view
    'exec-and-forget pgrep -x Obsidian || open -a Obsidian',
    'exec-and-forget pgrep -x "Google Chrome" || open -a "Google Chrome"',
    'exec-and-forget pgrep -x wezterm-gui || open -a wezterm', # Opening wezterm last because I want to be in wezterm when startup completes
]

start-at-login = true

# 'main' binding mode must be always presented
# Fallback value (if you omit the key): mode.main.binding = {}
[mode.main.binding]

    # All possible keys:
    # - Letters.        a, b, c, ..., z
    # - Numbers.        0, 1, 2, ..., 9
    # - Keypad numbers. keypad0, keypad1, keypad2, ..., keypad9
    # - F-keys.         f1, f2, ..., f20
    # - Special keys.   minus, equal, period, comma, slash, backslash, quote, semicolon,
    #                   backtick, leftSquareBracket, rightSquareBracket, space, enter, esc,
    #                   backspace, tab, pageUp, pageDown, home, end, forwardDelete,
    #                   sectionSign (ISO keyboards only, european keyboards only)
    # - Keypad special. keypadClear, keypadDecimalMark, keypadDivide, keypadEnter, keypadEqual,
    #                   keypadMinus, keypadMultiply, keypadPlus
    # - Arrows.         left, down, up, right

    # All possible modifiers: cmd, alt, ctrl, shift

    alt-ctrl-cmd-shift-0 = 'workspace 1'
    alt-ctrl-cmd-shift-1 = 'workspace 2'
    alt-ctrl-cmd-shift-2 = 'workspace 3'
    alt-ctrl-cmd-shift-3 = 'workspace 4'
    alt-ctrl-cmd-shift-4 = 'workspace 5'
    alt-ctrl-cmd-shift-5 = 'workspace 6'
    alt-ctrl-cmd-shift-6 = 'workspace 7'
    alt-ctrl-cmd-shift-7 = 'workspace 8'
    alt-ctrl-cmd-shift-8 = 'workspace 9'
    # See: https://nikitabobko.github.io/AeroSpace/commands#mode
    alt-ctrl-cmd-shift-9 = 'mode service'

[[on-window-detected]]
if.app-id = 'com.github.wez.wezterm'
run = "move-node-to-workspace 1"

[[on-window-detected]]
if.app-id = 'com.google.Chrome'
run = "move-node-to-workspace 2"

[[on-window-detected]]
if.app-id = 'md.obsidian'
run = "move-node-to-workspace 3"

[[on-window-detected]]
if.app-id = 'com.pwmt.zathura'
run = "move-node-to-workspace 4"

# 'service' binding mode declaration.
# See: https://nikitabobko.github.io/AeroSpace/guide#binding-modes
[mode.service.binding]
    backspace = 'mode main'
    x = ['exec-and-forget ~/dev/scripts/killapps']
    c = ['reload-config', 'mode main']
    r = ['exec-and-forget ~/dev/scripts/repatriate_window', 'mode main']
    a = ['exec-and-forget ~/dev/scripts/repatriate_window -a', 'mode main']
    f = ['flatten-workspace-tree', 'mode main'] # reset layout

    h = ['focus left', 'mode main']
    j = ['focus down', 'mode main']
    k = ['focus up', 'mode main']
    l = ['focus right', 'mode main']

    shift-h = ['move left', 'mode main']
    shift-j = ['move down', 'mode main']
    shift-k = ['move up', 'mode main']
    shift-l = ['move right', 'mode main']

    ctrl-h = ['join-with left', 'mode main']
    ctrl-j = ['join-with down', 'mode main']
    ctrl-k = ['join-with up', 'mode main']
    ctrl-l = ['join-with right', 'mode main']

    t = ['move-node-to-workspace --focus-follows-window 1', 'mode main']
    0 = ['move-node-to-workspace --focus-follows-window 1', 'mode main']
    1 = ['move-node-to-workspace --focus-follows-window 2', 'mode main']
    2 = ['move-node-to-workspace --focus-follows-window 3', 'mode main']
    3 = ['move-node-to-workspace --focus-follows-window 4', 'mode main']
    4 = ['move-node-to-workspace --focus-follows-window 5', 'mode main']
    5 = ['move-node-to-workspace --focus-follows-window 6', 'mode main']
    6 = ['move-node-to-workspace --focus-follows-window 7', 'mode main']
    7 = ['move-node-to-workspace --focus-follows-window 8', 'mode main']
    8 = ['move-node-to-workspace --focus-follows-window 9', 'mode main']

    u = 'resize smart -50'
    i = 'resize smart +50'

    # `layout` switches to the first layout orintation in the provided list which does not describe
    # the current orientation. So here, this just means toggling horizontal and vertical layouts.
    alt-comma = 'layout horizontal vertical'
    alt-enter = 'workspace-back-and-forth'

# Gaps between windows (inner-*) and between monitor edges (outer-*).
[gaps]
    inner.horizontal = 10
    inner.vertical =   10
    outer.left =       0
    outer.bottom =     0
    outer.top =        0
    outer.right =      0
